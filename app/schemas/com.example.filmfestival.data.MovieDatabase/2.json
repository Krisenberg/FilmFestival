{
  "formatVersion": 1,
  "database": {
    "version": 2,
    "identityHash": "c37944660d25d787245a7a6d1ad13412",
    "entities": [
      {
        "tableName": "Actor",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`actorId` INTEGER NOT NULL, `name` TEXT NOT NULL, `photo` TEXT NOT NULL, PRIMARY KEY(`actorId`))",
        "fields": [
          {
            "fieldPath": "actorId",
            "columnName": "actorId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "photo",
            "columnName": "photo",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "actorId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Award",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`awardId` INTEGER NOT NULL, `name` TEXT NOT NULL, `details` TEXT NOT NULL, PRIMARY KEY(`awardId`))",
        "fields": [
          {
            "fieldPath": "awardId",
            "columnName": "awardId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "details",
            "columnName": "details",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "awardId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "MovieAwardCrossRef",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`movieId` INTEGER NOT NULL, `awardId` INTEGER NOT NULL, PRIMARY KEY(`movieId`, `awardId`), FOREIGN KEY(`movieId`) REFERENCES `Movie`(`movieId`) ON UPDATE NO ACTION ON DELETE NO ACTION , FOREIGN KEY(`awardId`) REFERENCES `Award`(`awardId`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "movieId",
            "columnName": "movieId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "awardId",
            "columnName": "awardId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "movieId",
            "awardId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "Movie",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "movieId"
            ],
            "referencedColumns": [
              "movieId"
            ]
          },
          {
            "table": "Award",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "awardId"
            ],
            "referencedColumns": [
              "awardId"
            ]
          }
        ]
      },
      {
        "tableName": "Movie",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`movieId` INTEGER NOT NULL, `title` TEXT NOT NULL, `moviePoster` TEXT NOT NULL, `moviePhoto` TEXT NOT NULL, `year` INTEGER NOT NULL, `duration` INTEGER NOT NULL, `genre` TEXT NOT NULL, `description` TEXT NOT NULL, PRIMARY KEY(`movieId`))",
        "fields": [
          {
            "fieldPath": "movieId",
            "columnName": "movieId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "moviePoster",
            "columnName": "moviePoster",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "moviePhoto",
            "columnName": "moviePhoto",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "year",
            "columnName": "year",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "duration",
            "columnName": "duration",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "genre",
            "columnName": "genre",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "movieId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Role",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`roleId` INTEGER NOT NULL, `movieId` INTEGER NOT NULL, `actorId` INTEGER NOT NULL, `starring` TEXT NOT NULL, PRIMARY KEY(`roleId`))",
        "fields": [
          {
            "fieldPath": "roleId",
            "columnName": "roleId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "movieId",
            "columnName": "movieId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "actorId",
            "columnName": "actorId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "starring",
            "columnName": "starring",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "roleId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "Show",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`showId` INTEGER NOT NULL, `movieId` INTEGER NOT NULL, `dateTime` TEXT NOT NULL, PRIMARY KEY(`showId`))",
        "fields": [
          {
            "fieldPath": "showId",
            "columnName": "showId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "movieId",
            "columnName": "movieId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "dateTime",
            "columnName": "dateTime",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "showId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "TicketCrossRef",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` INTEGER NOT NULL, `showId` INTEGER NOT NULL, PRIMARY KEY(`userId`, `showId`), FOREIGN KEY(`userId`) REFERENCES `User`(`userId`) ON UPDATE CASCADE ON DELETE CASCADE , FOREIGN KEY(`showId`) REFERENCES `Show`(`showId`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "showId",
            "columnName": "showId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "userId",
            "showId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "User",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "Show",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "showId"
            ],
            "referencedColumns": [
              "showId"
            ]
          }
        ]
      },
      {
        "tableName": "Trailer",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`trailerId` INTEGER NOT NULL, `movieId` INTEGER NOT NULL, `trailer` TEXT NOT NULL, PRIMARY KEY(`trailerId`))",
        "fields": [
          {
            "fieldPath": "trailerId",
            "columnName": "trailerId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "movieId",
            "columnName": "movieId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "trailer",
            "columnName": "trailer",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "trailerId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "User",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` INTEGER NOT NULL, `username` TEXT NOT NULL, `avatar` TEXT NOT NULL, PRIMARY KEY(`userId`))",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "username",
            "columnName": "username",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "avatar",
            "columnName": "avatar",
            "affinity": "TEXT",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "userId"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "WatchlistCrossRef",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`userId` INTEGER NOT NULL, `movieId` INTEGER NOT NULL, PRIMARY KEY(`userId`, `movieId`), FOREIGN KEY(`userId`) REFERENCES `User`(`userId`) ON UPDATE CASCADE ON DELETE CASCADE , FOREIGN KEY(`movieId`) REFERENCES `Movie`(`movieId`) ON UPDATE NO ACTION ON DELETE NO ACTION )",
        "fields": [
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "movieId",
            "columnName": "movieId",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "userId",
            "movieId"
          ]
        },
        "indices": [],
        "foreignKeys": [
          {
            "table": "User",
            "onDelete": "CASCADE",
            "onUpdate": "CASCADE",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "userId"
            ]
          },
          {
            "table": "Movie",
            "onDelete": "NO ACTION",
            "onUpdate": "NO ACTION",
            "columns": [
              "movieId"
            ],
            "referencedColumns": [
              "movieId"
            ]
          }
        ]
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'c37944660d25d787245a7a6d1ad13412')"
    ]
  }
}